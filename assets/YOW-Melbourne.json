{
  "title": "YOW! Melbourne 2010",
  "sessions": [{
    "title": "Registration",
    "startTime": 1291237200,
    "endTime": 1291239000
  }, {
    "title": "Welcome",
    "startTime": 1291239000,
    "endTime": 1291240800
  }, {
    "title": "Things I Wish I'd Known",
    "stream": "Keynote Address",
    "startTime": 1291240800,
    "endTime": 1291244400,
    "abstract": "Australian technologist and entrepreneur Rod Johnson will talk candidly about some of the lessons he's learnt over 15 years in IT, some of the mistakes he's made and observed others making, and some of the things that proved to work. The talk will cover both business and technical topics and reflect Rod's experience writing books on Java programming, creating and leading the popular Spring Framework and building a successful venture-funded software company, acquired in 2009 by VMware, where Rod is today an executive.",
    "speakers": [{
      "name": "Rod Johnson",
      "jobTitle": "SVP, Middleware & GM of the SpringSource division",
      "company": "VMWare",
      "websiteUri": "http://www.springsource.com",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/photos/speakers/rod_johnson_thumbnail.png",
      "twitterHandle": "springrod",
      "bio": "Rod is SVP, Middleware and GM of the SpringSource division at VMware. He is a thought leader on open source, as well as a popular speaker at conferences and symposia around the world. Spring was based on the code published with Rod's best-selling Expert One-on-One J2EE Design and Development (2002). This book was one of the most influential books ever published on J2EE and the sequel, J2EE without EJB (July 2004, with Juergen Hoeller), has proven almost equally significant, establishing a comprehensive vision for lightweight, post-EJB J2EE development.\nRod has specialized in server-side Java since 1996 across a wide range of industries. His hands-on experience has led him to see problems from a client's perspective as well as a technology perspective, and has driven his influential criticism of bloated, inefficient, orthodox approaches to J2EE architecture.\nRod is a member of the Java Community Process (JCP) Executive Committee (EC). EC members guide the evolution of the Java technologies by approving and voting on all technology proposals. They are also responsible for defining the JCP's rules of governance and the legal agreement between members and the organization.\nRod holds a BA with Honors in Computer Science, Mathematics and Musicology as well as a Phd from the University of Sydney.\nRod is SVP, Middleware and GM of the SpringSource division at VMware."
    }]
  }, {
    "title": "Morning Tea",
    "startTime": 1291244400,
    "endTime": 1291245300
  }, {
    "title": "Extreme Java Productivity: Enterprise Applications in Just Minutes",
    "stream": "Enterprise Java",
    "startTime": 1291245300,
    "endTime": 1291248900,
    "abstract": "Delight your customers and impress your colleagues by delivering enterprise Java applications faster than ever before. In this session we'll introduce Spring Roo, an open source tool that makes it easy to build applications using the Java language, standards and technologies you already know. In this demonstration-oriented session, we will cover:\n• Support for Java standards including JPA, Servlet Spec, JSP, JavaBean Validation, JavaMail, JMS etc\n• Transparently reverse engineering and synchronising database schemas - Automatic Google Web Toolkit (GWT) UIs\n• Automatic JUnit tests, Maven builds, JSP pages, toString() methods etc - Deploying to clouds such as Google App Engine\n• Extending Roo with add-ons - Removing Roo from your project in four clicks\nThis session assumes basic Enterprise Java development knowledge.",
    "speakers": [{
      "name": "Ben Alex",
      "jobTitle": "Senior Staff Engineer",
      "company": "VMWare SpringSource",
      "websiteUri": "http://www.springsource.org/roo",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/photos/speakers/ben_alex_thumbnail.png",
      "twitterHandle": "benalexau",
      "bio": "Dr. Ben Alex is a Senior Staff Engineer with VMware (SpringSource Division), and has been working professionally in software since 1995. Ben founded the Spring Security project in 2003 and led its development into a popular, open-source security framework that is used in numerous government, banking and military installations. More recently Ben founded and serves as lead of the Spring Roo and Spring Shell projects, both of which deliver significant productivity and usability benefits to those using Spring technologies.\nBen's career history also includes other roles in software development and business. From 2005 until 2008, he led the establishment and exponential growth of SpringSource's operations in Asia-Pacific. Prior to SpringSource, Ben founded and grew a successful Australian software company, Acegi Technology Pty Limited. He has been a director and advisor to businesses in diverse industries including business services, intellectual property licensing and ecommerce.\nIn recent years, Ben has presented at technology conferences including JavaOne, The Server Side Java Symposium, JAOO, Øredev, Google I/O, SpringOne and The Spring Experience. He is a regular guest presenter at user groups across the world, with recent appearances in Sydney, Melbourne, Brisbane, Canberra, Perth, Singapore, Wellington, Auckland, Christchurch and Stockholm. He also authored the security chapter of the Wiley book, \"Professional J2EE Development with Spring Framework\""
    }]
  }, {
    "title": "The State of the Art .NET - 12 months of things to learn",
    "stream": "MS.NET",
    "startTime": 1291245300,
    "endTime": 1291248900,
    "abstract": "For some people the .NET ecosystem comes along with some negative connotations related to closed-source, prescriptive, narrow solution architectures.\nNonetheless, there is a rich array of interesting technology available when using .NET whether on Windows or on Mono. Microsoft is investing in languages and frameworks, open-source innovations are being applied from other platforms, and very smart people using .NET as the best choice for their circumstance.\nThis talk will showcase some of the very interesting languages, development tools, frameworks and architectural approaches (whether from Microsoft or from the Alpha Geeks in the .NET community) that you should have on your list of things to research, learn, and use over the next 12 months.",
    "speakers": [{
      "name": "Josh Graham",
      "jobTitle": "Chief Dispenser of Pleasantries",
      "websiteUri": "http://grahamis.com/blog/",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/YOW_2010/Speakers/josh%20graham_thumbnail.jpg",
      "twitterHandle": "delitescere",
      "bio": "Josh Graham has over 20 years experience in the software industry. He is a speaker, track host, and chair at conferences on SOA, enterprise architecture, agile software delivery, and technology innovation. He is a \"modern enterprise architect\", applying the principles of agile software development and software craftsmanship across architectural disciplines.\nOver the past 5 years Josh has been learning from the best - architecting, developing and integrating large scale Java, Ruby, and C# systems at ThoughtWorks and Hashrocket. Josh co-organizes speakerconf \"The International Software Technology Summit\", and is the author of the \"squealer\" ETL for MongoDB. You may have already met Josh at a bar."
    }, {
      "name": "Amanda Laucher",
      "jobTitle": "\"F# Amanda\" and author of \"F# In Action\"",
      "company": "Thoughtworks",
      "websiteUri": "http://pandamonial.grahamis.com/blog/",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/YOW_2010/Speakers/Amanda_Laucher_Thumbnail.jpg",
      "twitterHandle": "Pandamoniel",
      "bio": "Amanda Laucher is a software developer/architect focusing on Microsoft technologies. She is currently based in Chicago working with Thoughtworks."
    }]
  }, {
    "title": "The Rich Get Richer: Rails 3",
    "stream": "Ruby",
    "startTime": 1291245300,
    "endTime": 1291248900,
    "abstract": "You will learn about the changes in Rails 3 that make your life as a web developer easier. Most of the significant changes have to do with the implementation of Rails under the covers. We'll look at what those changes are and how they affect you. We'll also take a look at which APIs changed, from initialization hooks to query generation with Arel, a relational algebra library. Other topics include the new ActiveModel library, the influence of Merb on Rails 3, its overall Modularity and Bundler.",
    "speakers": [{
      "name": "Obie Fernandez",
      "jobTitle": "CEO & Founder",
      "company": "Hashrocket",
      "websiteUri": "http://obiefernandez.com",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/YOW_2010/Speakers/obie%20fernandez_thumbnail.jpg",
      "twitterHandle": "obie",
      "bio": "Obie Fernandez is Founder and CEO of Hashrocket, one of the world's leading Rails-based web design and development consultancies, headquartered in Jacksonville, FL. He is a widely recognized technology leader and frequent speaker at industry events and is Addison Wesley's Series Editor for the bestselling Professional Ruby Series. Prior to Hashrocket, as a senior consultant at ThoughtWorks, Obie specialized in complex custom enterprise software projects. He has been hacking computers since he got his first Commodore VIC-20 in the eighties, and found himself in the right place and time as a programmer on some of the first Java enterprise projects of the mid-nineties."
    }]
  }, {
    "title": "Connectivity for Today's Complex World",
    "stream": "Enterprise Java",
    "startTime": 1291249200,
    "endTime": 1291252800,
    "abstract": "Greg works with many clients architecting and implementing connectivity solutions, particularly focused on Enterprise Service Bus. In this session, Greg explores established architectures for connectivity/ESB, and explores emerging architectures including federated service management, the expanding role of appliances, hybrid buses using multiple technologies, dynamic policy-driven ESBs, and connectivity in and to the Cloud.",
    "speakers": [{
      "name": "Greg Flurry",
      "jobTitle": "IBM Distinguished Engineer, SOA and ESB",
      "company": "IBM",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/YOW_2010/Speakers/greg%20flurry_thumbnail.jpg",
      "bio": "Greg Flurry is an IBM Distinguished Engineer in IBM's Business Process and Service Optimization (formerly SOA Advanced Technology) group. His responsibilities include working with clients on service oriented solutions and advancing IBM's service oriented product portfolio, especially in the area of connectivity and integration (ESB, adapters, service registry, ...). Greg has over 10 years of experience in SOA, starting with web services. Greg has worked with cross-industry clients worldwide, and is a trusted advisor in SOA and connectivity for several North American clients. Greg has over 30 patents and over 50 published papers. Greg's current focus is on federation and patterns in connectivity."
    }]
  }, {
    "title": "Rx: Curing Your Asynchronous Programming Blues",
    "stream": "MS.NET",
    "startTime": 1291249200,
    "endTime": 1291252800,
    "abstract": "Asynchronous, event-driven \"reactive\" programming is way too hard in today's world of development tools and frameworks. The huge amount of manual and error-prone plumbing leads to incomprehensible and hard to maintain code. As we reach out to services in the cloud, the desire for asynchronous computation is ever increasing, requiring a fresh look on the problems imposed by reactive programming. Centered around the concept of observable data sources, Rx provides a framework that takes care of the hard parts of reactive programming. Instead of focusing on the hard parts, you now can start dreaming about the endless possibilities of composing queries over asynchronous data sources, piggybacking on convenient LINQ syntax. In this session, we'll cover the design philosophy of Rx, rooted on the deep duality between the interactive IEnumerable interface and the new reactive IObservable interface in .NET 4. From this core understanding, we'll start looking at various combinators and operators defined over observable collections, as provided by Rx, driving concepts home by a bunch of samples. Finally, if time permits, we'll look at the Reactive Extensions for JavaScript which allows us to take the concepts we already know from Rx and apply them to JavaScript and have deep integration with libraries such as jQuery.  Democratizing asynchronous programming starts today. Don't miss out on it!",
    "speakers": [{
      "name": "Erik Meijer",
      "jobTitle": "Architect LINQ, C#, Microsoft SQL",
      "company": "Microsoft",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/photos/speakers/erik_meijer_thumbnail.png",
      "bio": "One of the most popular speakers at JAOO, TechEd, Mix and many other software developer conferences. Erik has twice been elected as a Distinguished Technical Contributor by his peers at Microsoft. Erik Meijer is an architect in the Microsoft SQL server division where he currently works together with the Microsoft Visual C# and the Microsoft Visual Basic language design teams on data integration in programming languages.\nPrior to joining Microsoft he was an associate professor at Utrecht University and adjunct professor at the Oregon Graduate Institute.\nErik is one of the designers of the standard functional programming language Haskell98 and more recently the Cw language."
    }]
  }, {
    "title": "Rails in the Large: How We're Building (One of) the Largest Rails Apps in the World (for an Enterprise)",
    "stream": "Ruby",
    "startTime": 1291249200,
    "endTime": 1291252800,
    "abstract": "While others have been debating whether Rails can scale to enterprise levels, we've been demonstrating it. ThoughtWorks is running one of the largest Rails projects in the world, for an Enterprise. This session discusses tactics, techniques, best practices, and other things we've learned from scaling rails development. I discuss infrastructure, testing, messaging, optimization, performance, and the results of lots of lessons learned, including killer rock-scissors-paper tricks to help you avoid babysitting the view tests!",
    "speakers": [{
      "name": "Neal Ford",
      "jobTitle": "Software Architect and Meme Wrangler",
      "company": "Thoughtworks",
      "websiteUri": "http://www.nealford.com",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/photos/speakers/neal_ford_thumbnail.png",
      "twitterHandle": "neal4d",
      "bio": "Neal is Software Architect and Meme Wrangler at ThoughtWorks, a global IT consultancy with an exclusive focus on end-to-end software development and delivery. Before joining ThoughtWorks, Neal was the Chief Technology Officer at The DSW Group, Ltd., a nationally recognized training and development firm. Neal has a degree in Computer Science from Georgia State University specializing in languages and compilers and a minor in mathematics specializing in statistical analysis. He is also the designer and developer of applications, instructional materials, magazine articles, video presentations, and author of 6 books, including the most recent The Productive Programmer.\nHis language proficiencies include Java, C#/.NET, Ruby, Groovy, functional languages, Scheme, Object Pascal, C++, and C. His primary consulting focus is the design and construction of large-scale enterprise applications. Neal has taught on-site classes nationally and internationally to all phases of the military and to many Fortune 500 companies. He is also an internationally acclaimed speaker, having spoken at over 100 developer conferences worldwide, delivering more than 600 talks. If you have an insatiable curiosity about Neal, visit his web site at www.nealford.com. He welcomes feedback and can be reached at nford@thoughtworks.com."
    }]
  }, {
    "title": "Lunch",
    "startTime": 1291252800,
    "endTime": 1291255200
  }, {
    "title": "Avoid a Failed SOA - Business & Autonomous Components to the Rescue",
    "stream": "Enterprise SOA",
    "startTime": 1291255200,
    "endTime": 1291258800,
    "abstract": "Calling everything a service makes the term meaningless. Now, we've got 13 different kinds of services and no clue when to use which one. Is a single operation a service? Is a single endpoint a service? What about cross cutting functions like authorization and data access? If you've been wondering about these sorts of questions, then this talk is for you. If you've been looking for a top-down analysis and design process, then this talk is for you. If you've been looking for concrete guidance on how to choose technology for SOA, then this talk is for you. Join Udi as he describes the \"missing links\" in SOA: Business Components and Autonomous Components. It turns out that components are more important than ever in this new, service-oriented world.",
    "speakers": [{
      "name": "Udi Dahan",
      "jobTitle": "The Software Simplist Enterprise Development Expert & SOA Specialist",
      "company": "The Software Simplist",
      "websiteUri": "http://www.udidahan.com",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/YOW_2010/Speakers/Udi%20dahan_thumbnail.png",
      "bio": "Udi Dahan is The Software Simplist, an internationally renowned expert on software architecture and design. A solutions architecture and connected systems MVP, 5 years in a row, Mr. Dahan is also one of 33 experts in Europe recognized by the International .NET Association, an author and trainer for the International Association of Software Architects, and an SOA, Web Services, and XML Guru recommended by Dr. Dobb’s – the world’s largest software magazine."
    }]
  }, {
    "title": "Integrated Tests Are A Scam",
    "stream": "Best Practices",
    "startTime": 1291255200,
    "endTime": 1291258800,
    "abstract": "Integrated tests are a scam -- a self-replicating virus that threatens to infect your code base, your project, and your team with endless pain and suffering. In this session you will learn the reasons integrated tests will let you down and a simple, two-part strategy to regain control of your defect rate and your design.",
    "speakers": [{
      "name": "J. B. Rainsberger",
      "jobTitle": "Principal",
      "company": "JBRAINS",
      "websiteUri": "http://blog.jbrains.ca",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/YOW_2010/Speakers/J%20rainsberger_thumbnail.jpg",
      "twitterHandle": "jbrains",
      "bio": "J. B. (Joe) Rainsberger is a Canadian software development consultant and technology writer, best known for his contributions to agile development,for which he was awarded the highest honor from the agile community, the Gordon Pask Award in 2005 (its first year of existence). He is the founder of XPDay North America. He is also well known for his book,JUnit Recipes: Practical Methods for Programmer Testing. He has been an agile practitioner since 2000, and in this time his articles on agile development have been published by leading programmer's magazines including IBM DeveloperWorks and IEEE Software, for the latter of which he edits the regular \"Not Just Coding\" column.\nHe is well known and well regarded in the Agile Software Development community. He is a frequent speakerat conferences around the world, and an important contributor to public discussions that further the state of the art.\nJ.B. helps software organizations better satisfy their customers and the businesses they support. Expert at delivering successful software, he writes, teaches and speaks about why delivering better software is important, but not enough. He helps clients improve their bottom line by coaching teams as well as leading change programs. He helps software organizations off the treadmill of over-commitment and under-delivery, addressing all aspects of software delivery including understanding the business, gelling the team and even writing great code. Learn more about how Joe will inspire your software organization at jbrains.ca, at conferences world-wide, or by writing him directly at get.started@jbrains.ca."
    }]
  }, {
    "title": "How to Think about Parallel Programming---Not!",
    "stream": "Languages & Concurrency",
    "startTime": 1291255200,
    "endTime": 1291258800,
    "abstract": "Anyone remember the old days, when for good performance you had to worry carefully about which register should hold which variable, and when? Sometimes we still do this to get extremely high performance from critical inner loops, especially when using specialized processing hardware such as GPUs.\nOn the other hand, we have been able to write ever more complex and ever more capable software systems only by sacrificing such micromanagement and using general-purpose tools and abstractions for coding the bulk of our software.  Along the way, we have discovered that code generated by automated tools often does a better job than hand-crafted code.\nAnd we learn to code in such a way that the behavior of our code does not depend critically on the detailed optimization decisions that we have delegated to the tools.  If we want to let a compiler's register allocator have the freedom to put variables in registers, we stop writing code takes the address of a variable, as in the C expression & myvar. If we want to allow an automatic storage allocator to do its job, we must write code that works properly independently of where an object or array happens to have been allocated, and perhaps independently of whether the object or array happens to be automatically relocated in the middle of a computation.  Once we do this, we don't have to think about memory placement.  Good programming language design can get us from the place where we must remember \"don't use this difficult feature\" to the place where it's not even on the radar screen because the language provides other, better ways to think and get things done. (Example: Java doesn't even have a way to take the address of a variable.)\nLikewise, the best way to write code for multiple processors is not to have to think about multiple processors.  We need to get to the point where we worry about the assignment of tasks to processors just about as much as we worry about the assignment of data to memory---which is to say, only for truly critical portions of the code---and for the most part leave such decisions to automated tools.\nThis will require further adjustments in our programming habits---adjustments that, we argue, in the end will make programs easier to understand and maintain as well as easier to run on parallel processors.  The key is not to focus on a particular technology but on useful invariants.  Here, as in the past, good programming language design can help to encourage good programming habits.",
    "speakers": [{
      "name": "Guy L. Steele, Jr.",
      "jobTitle": "Fellow",
      "company": "Sun Labs, Oracle",
      "websiteUri": "http://labs.oracle.com/projects/plrg",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/YOW_2010/Speakers/guysteele_thumbnail.jpg",
      "bio": "\"Richard Gabriel and Guy Steele are beasts in the world of computer science, and they are creative and witty geeks.\"\nGuy L. Steele Jr. (Ph.D., MIT, 1980) is a Software Architect and heads the Programming Language Research Group within Sun Labs (now a part of Oracle) in Burlington, MA, USA. Before coming to Sun Labs in 1994, he held positions at Carnegie-Mellon University, Tartan Laboratories, and Thinking Machines Corporation.He is the author or co-author of several books on programming languages (Common Lisp, C, High Performance Fortran, the Java Language Specification) as well as \"The Hacker's Dictionary\" (also known on the Internet as the \"Jargon File\").\nHe has served as program chair for four ACM conferences on programming languages and also on the program committees of over 30 other conferences. He has served on accredited standards committees for the programming languages Common Lisp, C, Fortran, Scheme, and ECMAScript. He is an inventor or co-inventor on over 40 computer-related patents. He designed the original EMACS command set and was the first person to port TeX.\nHe is a Fellow of the American Association for Artificial Intelligence (1990) and a Fellow of the Association for Computing Machinery (1994). He has been awarded the ACM Grace Murray Hopper Award (1988), a Gordon Bell Prize (1990), and the ACM SIGPLAN Programming Languages Achievement Award (1996). He has been elected to the National Academy of Engineering of the United States of America (2001) and to the American Academy of Arts and Sciences (2002)."
    }]
  }, {
    "title": "Why NoSQL, and Why Riak?",
    "stream": "Cloud Computing",
    "startTime": 1291259100,
    "endTime": 1291262700,
    "abstract": "This talk will explain the confusing and oddly-named \"NoSQL\" database movement and will provide an overview of the various database technologies lumped into that category. Justin will give advice on how to determine which if any of these systems might be relevant to your own use case. We will then narrow the conversation to one of the many discussed systems, Riak, and describe the technology and business choices behind it.  The audience will emerge with a better understanding of alternative databases in general and Riak in specific.",
    "speakers": [{
      "name": "Justin Sheehy",
      "jobTitle": "CTO",
      "company": "Basho Technologies",
      "websiteUri": "http://www.basho.com",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/photos/speakers/Justin%20Sheehy_thumbnail.jpg",
      "twitterHandle": "justinsheehy",
      "bio": "Justin Sheehy is the CTO of Basho Technologies, the company behind the creation of Webmachine and Riak. As Chief Technology Officer, Justin Sheehy directs Basho's technical strategy, including integration with other platforms and new research into storage and distributed systems. Most recently before Basho, he was a principal scientist at the MITRE Corporation and a senior architect for systems infrastructure at Akamai. At both of those companies he focused on multiple aspects of robust distributed systems, including scheduling algorithms, language-based formal models, and resilience."
    }]
  }, {
    "title": "Testing Your Javascript",
    "stream": "Best Practices",
    "startTime": 1291259100,
    "endTime": 1291262700,
    "abstract": "With the advent of new, fast virtual machines and frameworks for both in- and out-of-browser usage, Javascript has stepped into its rightful place as a productive, object-oriented language. More and more, we see full-featured applications being built entirely in this great language. Unfortunately, a lot of the coding habits remain from its humble origin as 'just an html scripting language.' Automated testing is accepted as standard in most other languages, why not in Javascript?\nIn this talk, we'll look at techniques and tools for testing your Javascript effectively. Just getting the tools set up can be daunting, so we'll spend some time looking at setup. Testing interactions with your HTML can be tricky, so we'll cover tips for effectively interacting with your web pages in your tests.",
    "speakers": [{
      "name": "Corey Haines",
      "jobTitle": "Software Journeyman & Code Retreat Facilitator",
      "websiteUri": "http://www.coreyhaines.com",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/photos/speakers/Corey%20Haines_thumbnail.jpg",
      "twitterHandle": "coreyhaines",
      "bio": "Corey Haines has spent much of his 13+year professional career in the Microsoft ecosystem, until moving out of the corporate world and joining a small startup doing Ruby on Rails. After leaving the startup in 2008, he began a year-long journey, traveling the midwest and east coast of the United States on a pair-programming tour. He would spend anywhere from a day to a week at different places, pairing with people in exchange for room and board. While on the road, he has also focused on expanding and defining the message of the Software Craftsmanship movement, as it pertains to both professionalism and career development.\nCorey has been practicing the Extreme Programming techniques for nearly 6 years; following the Behavior-Driven Development (BDD) techniques since the first rumblings of it in 2005. Lately, he has been actively mentoring others in the BDD workflow, as it pertains to day-to-day engineering practices, such as test-driven design, executable acceptance criteria and 'outside-in' development.\nNowadays, Corey travels to speak, study and facilitate Code Retreat events. During his travels, he is also collecting ideas for establishing a craftsmanship-based school of software development."
    }]
  }, {
    "title": "Erlang Warps Your Mind: Concurrency-Oriented Programming",
    "stream": "Languages & Concurrency",
    "startTime": 1291259100,
    "endTime": 1291262700,
    "abstract": "Erlang is a programming language designed for the Internet Age, although it pre-dates the Web. It is a language designed for multi-core computers, although it pre-dates them too. It is a \"beacon language\", to quote Haskell guru Simon Peyton-Jones, in that it more clearly than any other language demonstrates the benefits of concurrency-oriented programming. In this talk, I will try to show how learning Erlang will make you a better programmer.",
    "speakers": [{
      "name": "Ulf Wiger",
      "jobTitle": "CTO",
      "company": "Erlang Solutions Ltd.",
      "websiteUri": "http://ulf.wiger.net/weblog",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/photos/speakers/Ulf%20Wiger_thumbnail.jpg",
      "twitterHandle": "uwiger",
      "bio": "Ulf Wiger became one of the first commercial users of Erlang (certainly the first in North America) when he bought a license in 1993. At the time, he was busy designing disaster response systems in Alaska. In 1996, he joined Ericsson and became Chief Designer of the AXD 301 development. At nearly 2 million lines of Erlang code, AXD 301 is the most complex system ever built in Erlang, and probably the most complex commercial system built in any functional language. In recent years, Ulf has been involved in several products based on the AXD 301 architecture, and has been an active member of the Open Source Erlang community. In February 2009, Ulf began his new job as CTO of Erlang Solutions Ltd.\nSenior Specialist in the Architecture and Design of carrier-class systems. Has had the rare opportunity to influence a world-class product from conception through product release, several years of feature upgrades and maintenance, and finally a significant technology shift. Previous experience includes architecture and design of decision support technology for the US DOD and the Alaska Integrated Incident Management System.. A special interest is trying to bridge the cultures of research, Open Source development, and industrial design."
    }]
  }, {
    "title": "Afternoon Tea",
    "startTime": 1291262700,
    "endTime": 1291263600
  }, {
    "title": "Writing Apps the Google-y Way",
    "stream": "Cloud Computing",
    "startTime": 1291263600,
    "endTime": 1291267200,
    "abstract": "Google App Engine is a framework that lets you build web apps on top of Google's scalable hosting and data storage infrastructure. When you start building an app on App Engine, you soon realize that you do things differently from the way you made apps for more \"traditional\" hosting setups, because of our scalability-oriented design. In this talk, we'll give an overview of App Engine, and then look at how you would handle things like offline processing, geographic queries, or storing files, and how you would design real world apps like a microblogging service or social network site.",
    "speakers": [{
      "name": "Pamela Fox",
      "jobTitle": "Developer Advocate",
      "company": "Google",
      "websiteUri": "http://imagine-it.org",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/YOW_2010/Pamela_Fox_Thumbnail.jpg",
      "twitterHandle": "pamelafox",
      "bio": "Pamela Fox loves to teach other developers how to use Google APIs. She spent her first 3 years at Google supporting the Maps API community and the last year working with the the innovative Wave API community.\nBefore Google, she graduated with her bachelors and masters in Computer Science from the University of Southern California, with minors in 3d animation and linguistics, and research projects in facial animation and LiDAR data visualization.\nIn her free time, she likes to play around with any one of Google's 80+ APIs, make drawings on her new Android phone, and learn the dance steps from pop music videos."
    }]
  }, {
    "title": "Strategic Design: Avoiding Responsibility Traps",
    "stream": "Best Practices",
    "startTime": 1291263600,
    "endTime": 1291267200,
    "abstract": "As software development leaders, we need to think more strategically. Some design decisions affect the trajectory of the whole project or even the organization. These decisions arise in early chartering and throughout development, and they are about much more than architecture. This talk will examine these issues through the lens of the Strategic Design principles of domain-driven design (DDD), which systematize a few critical practices some successful teams do intuitively.\nIt is common for skilled teams to deliver software they are not proud of, due to compromises with legacy designs. Others toil for years, producing a platform that is never used to good advantage. These are strategic failures. On the other hand, there are projects with a direct explanation of how the software contributes to business goals. There are projects where designers work with a realistic view of the context of their development within the larger system, allowing them to maintain design clarity and integrity. These are strategic successes. Winning strategy starts with the domain.\nTwo DDD principles, \"Context Mapping\" and \"Distilling the Core Domain\", help you see your strategic situation more clearly and approach strategic design decisions more systematically. These techniques require extensive interaction with domain experts as well as the leaders of the organization, in discussions broader than functional requirements. They sometimes lead to priorities quite different from our most comfortable notions.",
    "speakers": [{
      "name": "Eric Evans",
      "jobTitle": "Lead",
      "company": "Domain Language, Inc",
      "websiteUri": "http://www.domainlanguage.com/",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/photos/speakers/eric_evans_thumbnail.png",
      "bio": "Eric Evans is a specialist in domain modeling and design in large business systems. Since the early 1990s, he has worked on many projects developing large business systems with objects and has been deeply involved in applying Agile processes on real projects.\nOut of this range of experiences emerged the synthesis of principles and techniques shared in the book \"Domain-Driven Design,\" Addison-Wesley 2003.\nEric now leads Domain Language, Inc., a consulting group which coaches and trains teams to make their development more productive and relevant through effective application of domain modeling and design."
    }]
  }, {
    "title": "Domain Modeling with Processes - Adventures of an \"object head\" in Erlang land",
    "stream": "Languages & Concurrency",
    "startTime": 1291263600,
    "endTime": 1291267200,
    "abstract": "Erlang is a programming language which has been picking up steam the last few years, in particular in domains that require a lot of coordination in the application logic. The language supports a simple and consistent set of features for writing concurrent distributed systems.\nOver the last few years, I have been meeting \"Erlang people\" more and more often, and I have been getting the impression that they have a magical ability to reason intuitively about concurrent systems in a way that I have not. It corresponds somewhat to the way we \"object heads\" think intuitively about classes and objects - just in terms of processes. That bothered me, so I wanted to learn Erlang.\nBeing a language implementor, the most obvious way to do that is to just go ahead and implement an Erlang VM, right? The result of this \"little exercise\" is Erjang, an open-source JVM-based Erlang VM. It has turned into a non-trivial project, Erjang is now +50k lines of Java code, and it runs substantial erlang programs.\nThis adventure to Erlang-land have taught me many things about how \"Erlang people\" think. I am beginning to understand how they think in processes/actors, how they model things and how they handle the complexity that arises in concurrent systems.\nIn the first part of my talk, I'll go through some of these lessons, some of the aha!'s and the insights into Erlang's secret sauce, and present some of the patterns Erlang'ers use to describe and model systems.\nSecondly, I'll take you through some of the highlights of the Erjang VM; which is just another angle at describing how Erlang and Java differs.",
    "speakers": [{
      "name": "Kresten Krab Thorup",
      "jobTitle": "CTO",
      "company": "Trifork",
      "websiteUri": "http://www.trifork.com",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/photos/speakers/kresten_krab_thumbnail.png",
      "twitterHandle": "drkrab",
      "bio": "Kresten Krab Thorup is CTO of Trifork, a public Danish company providing software solutions to government and financial services providers.  Trifork is also creator of the long-running JAOO conference, and co-creator of QCon.  As Trifork CTO Kresten in responsible for technical strategy in customer solutions, and spends most of the time acting as internal consultant, researching future technologies, as well as being editor for JAOO and QCon conferences. Kresten has also been a principal contributor to Trifork's own Java EE certified application server, where he authored the built-in CORBA ORB, a custom Java RMI implementation (now part of Apache Yoko), the transaction manager, the database connection management system, and the Java byte code rewriting subsystem.\nKresten has been a contributor to several open source projects, including GCC, GNU Objective-C, GNU Compiled Java, Emacs, and Apache Geronimo/Yoko.  Before joining Trifork, Kresten worked at NeXT Software (now acquired by Apple), where he was responsible for the development of the Objective-C tool chain, the debugger, and the runtime system. Kresten was on the committee for JSR-14 (adding generics to Java) which was closely related to the subject of his Ph.D. thesis.\nMost recently, Kresten has founded the Erjang open source project (notice the J there), a virtual machine for Erlang running on the Java Virtual Machine."
    }]
  }, {
    "title": "Distributed Programming the Google Way",
    "stream": "Cloud Computing",
    "startTime": 1291267500,
    "endTime": 1291271100,
    "abstract": "Google is known to operate one of the largest civilian computing infrastructures. These hardware resources are managed by a vast collection of software frameworks and tools, which form the basis for highly parallelized, reliable, low-latency, high-throughput applications. They also provide useful programming abstractions that speed up development and debugging. Some parts of this infrastructure, such as MapReduce, GFS, Sawzall, Chubby, Protocol Buffers, are available as open source projects or published in academic papers, while others are proprietary. Rather than dive into the dark corners of each of these tools, this talk tries to distill key design themes and patterns, which enable these unique capabilities, and can be re-used in other contexts.",
    "speakers": [{
      "name": "Gregor Hohpe",
      "jobTitle": "Software Engineer and Architect",
      "company": "Google",
      "websiteUri": "http://www.hohpe.com/Gregor/Work/index.html",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/YOW_2010/Speakers/Gregor%20Hohpe_thumbnail.png",
      "bio": "Gregor Hohpe is a software architect with Google, Inc. Gregor is a widely recognized thought leader on asynchronous messaging and service-oriented architectures. He co-authored the seminal book \"Enterprise Integration Patterns\" (Addison-Wesley, 2004), followed by \"Integration Patterns\" and \"Enterprise Solution Patterns\", both published by Microsoft Press. He was nominated a Microsoft MVP (Most Valuable Professional) Solution Architect for his contributions to the developer community and recognized as an active member of the patterns community by the Hillside Group. In 2005, Joel Spolsky selected Gregor's article \"Starbucks Does Not Use Two-phase Commit\" for his \"Best Software Writing\" (APress).\nGregor speaks regularly at technical conferences around the world. He likes to cut through the hype surrounding service-oriented architectures and captures nuggets of advice in the form of design patterns that can help developers avoid costly mistakes. Find out more about his work at eaipatterns.com."
    }]
  }, {
    "title": "Release It! Design and Deploy Production-Ready Software",
    "stream": "Best Practices",
    "startTime": 1291267500,
    "endTime": 1291271100,
    "abstract": "In this tutorial, you will learn how to create applications that survive the rigors of life in production. Too often, project teams aim to pass QA instead of aiming for success in production. Testing is not enough to prove that your software is ready for continuous availability in the corrosive environment of the Internet.\nDuring this tutorial, you will receive an understanding of the architecture and design patterns that can produce high availability in distributed, multithreaded systems such as those based on Java EE, .Net, or Ruby on Rails. You will also learn about the antipatterns that can sabotage your systems availability and capacity.",
    "speakers": [{
      "name": "Michael T. Nygard",
      "websiteUri": "http://www.michaelnygard.com",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/photos/speakers/Michael_Nygaard_thumbnail.png",
      "bio": "Michael strives to raise the bar and ease the pain for developers across the country. He shares his passion and energy for improvement with everyone he meets, sometimes even with their permission. Michael has spent the better part of 20 years learning what it means to be a professional programmer who cares about art, quality, and craft. He's always ready to spend time with other developers who are fully engaged and devoted to their work--the \"wide awake\" developers. On the flip side, he cannot abide apathy or wasted potential.\nMichael has been a professional programmer and architect for nearly 20 years. During that time, he has delivered running systems to the U. S. Government, the military, banking, finance, agriculture, and retail industries. More often than not, Michael has lived with the systems he built. This experience with the real world of operations changed his views about software architecture and development forever.\nHe worked through the birth and infancy of a Tier 1 retail site and has often served as \"roving troubleshooter\" for other online businesses. These experiences give him a unique perspective on building software for high performance and high reliability in the face of an actively hostile environment.\nMost recently, Michael wrote \"Release It! Design and Deploy Production-Ready Software\", a book that realizes many of his thoughts about building software that does more than just pass QA, it survives the real world. Michael previously wrote numerous articles and editorials, spoke at Comdex, and co-authored one of the early Java books."
    }]
  }, {
    "title": "Embracing Concurrency At Scale",
    "stream": "Languages & Concurrency",
    "startTime": 1291267500,
    "endTime": 1291271100,
    "abstract": "People have been talking about \"scaling\" and \"distributed systems\" a great deal lately. We need to clarify the meaning of these terms in order to have a worthwhile conversation about them. We will do so by discussing the details of how to actually produce practical, scalable, distributed systems.\nThat discussion will focus on methods for designing and building robust fundamentally-concurrent distributed systems. These approaches have been learned through building user-facing web applications, data storage and processing systems, and server management tools. We will look at practices that are \"common knowledge\" but too often forgotten, at lessons that the software industry at large has somehow missed, and at general \"good practices\" and rules that must be thrown away when moving into a distributed and concurrent world.",
    "speakers": [{
      "name": "Justin Sheehy",
      "jobTitle": "CTO",
      "company": "Basho Technologies",
      "websiteUri": "http://www.basho.com",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/photos/speakers/Justin%20Sheehy_thumbnail.jpg",
      "twitterHandle": "justinsheehy",
      "bio": "Justin Sheehy is the CTO of Basho Technologies, the company behind the creation of Webmachine and Riak. As Chief Technology Officer, Justin Sheehy directs Basho's technical strategy, including integration with other platforms and new research into storage and distributed systems. Most recently before Basho, he was a principal scientist at the MITRE Corporation and a senior architect for systems infrastructure at Akamai. At both of those companies he focused on multiple aspects of robust distributed systems, including scheduling algorithms, language-based formal models, and resilience."
    }]
  }, {
    "title": "Break",
    "startTime": 1291271100,
    "endTime": 1291273200
  }, {
    "title": "Keynote 50 in 50",
    "stream": "Keynote Address",
    "startTime": 1291275900,
    "endTime": 1291280400,
    "abstract": "Languages - what's to learn from them? Relics of the past; we know how to design them / to use them. Types / messages / invocation / loops / numbers / methods / big ol' libraries / lots of = signs. Heh, but what is programming, and what role do programming languages play in that process? We have learned a lot over the last five decades: organizing principles, established conventions, theory, fashions, and fads. \"Those who cannot remember the past are condemned to repeat it.\" In this talk we survey what we think are the most important lessons of the past that future programmers, and future programming language designers, ought not forget. We illustrate each lesson by discussing specific programming languages of the past, and endeavor to shine what light we can on the future.",
    "speakers": [{
      "name": "Richard P. Gabriel",
      "jobTitle": "Distinguised Engineer",
      "company": "IBM",
      "websiteUri": "www.dreamsongs.com",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/photos/speakers/Richard_Gabriel_thumbnail.png",
      "twitterHandle": "rpg",
      "bio": "\"Richard Gabriel and Guy Steele are beasts in the world of computer science, and they are creative and witty geeks.\"\nRichard P. Gabriel received a PhD in Computer Science from Stanford University in 1981, and an MFA in Poetry from Warren Wilson College in 1998. He has been a researcher at Stanford University, company president and Chief Technical Officer at Lucid, Inc., vice president of Development at ParcPlace-Digitalk, a management consultant for several startups, a Distinguished Engineer at Sun Microsystems, a Consulting Professor of Computer Science at Stanford University, and lead guitarist for a rock 'n' roll band. He is a Distinguished Engineer at IBM Research, looking into the architecture, design, and implementation of extraordinarily large, self-sustaining systems as well as development techniques for building them. Until recently he was President of the Hillside Group, a nonprofit that nurtures the software patterns community by holding conferences, publishing books, and awarding scholarships. He is on Hillside's Board of Directors. He helped design and implement a variety of dialects of Lisp. He is author of four books (\"Performance and Evaluation of Lisp Systems,\" MIT Press; \"Patterns of Software: Tales from the Software Community,\" Oxford University Press; \"Writers' Workshops and the Work of Making Things,\" Addison-Wesley Press; and \"Innovation Happens Elsewhere: Open Source as Business Strategy,\" Morgan Kaufmann), and a poetry chapbook (\"Drive On,\" Hollyridge Press), with two books of poetry in preparation: \"Leaf of my Puzzled Desire\" and \"Drive On.\" He has published more than 100 scientific, technical, and semi-popular papers, articles, and essays on computing. He has won several awards, including the AAAI/ACM Allen Newell Award. He is a poet. He lives in California."
    }, {
      "name": "Guy L. Steele, Jr.",
      "jobTitle": "Fellow",
      "company": "Sun Labs, Oracle",
      "websiteUri": "http://labs.oracle.com/projects/plrg",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/YOW_2010/Speakers/guysteele_thumbnail.jpg",
      "bio": "\"Richard Gabriel and Guy Steele are beasts in the world of computer science, and they are creative and witty geeks.\"\nGuy L. Steele Jr. (Ph.D., MIT, 1980) is a Software Architect and heads the Programming Language Research Group within Sun Labs (now a part of Oracle) in Burlington, MA, USA. Before coming to Sun Labs in 1994, he held positions at Carnegie-Mellon University, Tartan Laboratories, and Thinking Machines Corporation.He is the author or co-author of several books on programming languages (Common Lisp, C, High Performance Fortran, the Java Language Specification) as well as \"The Hacker's Dictionary\" (also known on the Internet as the \"Jargon File\").\nHe has served as program chair for four ACM conferences on programming languages and also on the program committees of over 30 other conferences. He has served on accredited standards committees for the programming languages Common Lisp, C, Fortran, Scheme, and ECMAScript. He is an inventor or co-inventor on over 40 computer-related patents. He designed the original EMACS command set and was the first person to port TeX.\nHe is a Fellow of the American Association for Artificial Intelligence (1990) and a Fellow of the Association for Computing Machinery (1994). He has been awarded the ACM Grace Murray Hopper Award (1988), a Gordon Bell Prize (1990), and the ACM SIGPLAN Programming Languages Achievement Award (1996). He has been elected to the National Academy of Engineering of the United States of America (2001) and to the American Academy of Arts and Sciences (2002)."
    }]
  }, {
    "title": "Reception",
    "startTime": 1291280400,
    "endTime": 1291285800
  }, {
    "title": "Welcome",
    "startTime": 1291325400,
    "endTime": 1291327200
  }, {
    "title": "Exploring NoSQL",
    "stream": "Keynote Address",
    "startTime": 1291327200,
    "endTime": 1291330800,
    "abstract": "In his hunt to make all data accessible, Erik has caught sight of noSQL.",
    "speakers": [{
      "name": "Erik Meijer",
      "jobTitle": "Architect LINQ, C#, Microsoft SQL",
      "company": "Microsoft",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/photos/speakers/erik_meijer_thumbnail.png",
      "bio": "One of the most popular speakers at JAOO, TechEd, Mix and many other software developer conferences. Erik has twice been elected as a Distinguished Technical Contributor by his peers at Microsoft. Erik Meijer is an architect in the Microsoft SQL server division where he currently works together with the Microsoft Visual C# and the Microsoft Visual Basic language design teams on data integration in programming languages.\nPrior to joining Microsoft he was an associate professor at Utrecht University and adjunct professor at the Oregon Graduate Institute.\nErik is one of the designers of the standard functional programming language Haskell98 and more recently the Cw language."
    }]
  }, {
    "title": "Morning Tea",
    "startTime": 1291330800,
    "endTime": 1291331700
  }, {
    "title": "Designing and Implementing RESTful Application Protocols",
    "stream": "Web 2.0 Architecture",
    "startTime": 1291331700,
    "endTime": 1291335300,
    "abstract": "REST is ready for the enterprise. Imagine an information platform that is open and available to systems throughout the enterprise estate. A platform that eschews integration in favour of composition, connected data over siloed databases. A networked data structure with the power to implement valuable business behaviours: a distributed, hypermedia-driven application platform. Using techniques drawn from the forthcoming O'Reilly book 'REST in Practice', in this session I show how to model business processes as domain application protocols, implement them in terms of resource lifecycles, and execute them using HTTP idioms, media types and link relation values.",
    "speakers": [{
      "name": "Ian Robinson",
      "jobTitle": "Principal Consultant",
      "company": "ThoughtWorks",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/photos/speakers/ian_robinson_thumbnail.png",
      "bio": "Ian Robinson is a Principal Consultant with ThoughtWorks, where he specializes in the design and delivery of service-oriented and distributed systems.\nHe has written guidance for Microsoft on implementing integration patterns with Microsoft technologies, and has published articles on business-oriented development methodologies and distributed systems design - most recently in The ThoughtWorks Anthology (Pragmatic Programmers, 2008).\nHe is currently co-authoring a book on RESTful enterprise integration."
    }]
  }, {
    "title": "Building Windows Phone 7 Applications",
    "stream": "Mobile",
    "startTime": 1291331700,
    "endTime": 1291335300,
    "abstract": "Windows Phone 7 puts in your pocket powerful hardware and APIs familiar to .NET developers. In spite of these similarities the intrinsic differences between the phone and traditional PCs translate into differences between effective mobile and traditional code. In this talk I will cover some of the most interesting aspects of developing Windows Phone 7 applications. Understanding these the differences allows developers to leverage the phone's capabilities (such as the sensors) as well as managing the challenges of a mobile platform (such as the battery).",
    "speakers": [{
      "name": "Dragos Manolescu",
      "jobTitle": "Principal Software Developer, Application Platform Group",
      "company": "Microsoft",
      "websiteUri": "http://blogs.msdn.com/b/dragoman/",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/YOW_2010/Speakers/dragos%20manolescu%20thumbnail.png",
      "bio": "Dragos Manolescu is Principal Software Developer in the Application Platform Group in Windows Phone. He was responsible for shaping the Windows Phone 7 API surface area, and most recently has been working on device health and performance. Dragos' previous experience at Microsoft include Live Labs, a conglomerate of engineers and scientists with which he worked on Volta (web development through recompiling), Political Streams (social media), and the Web Sandbox (mashup security), and patterns & practices with which he developed prescriptive guidance for developers. Prior to Microsoft he worked as a consultant, assistant professor, and Smalltalk developer. Dragos doesn't tweet, and updates his Facebook profile infrequently. Most search engines can easily point you to his fingerprints on the Internet, which include several books, papers and articles, as well as conferences and workshops. Dragos holds a PhD in Computer Science from the University of Illinois at Urbana. He lives in the Seattle area of Washington (the evergreen state) where he enjoys the proximity to mountains, forests, islands, and the Pacific."
    }]
  }, {
    "title": "Leveraging Internet Technologies to Build a New Breed of Software Development Tools",
    "stream": "Tools",
    "startTime": 1291331700,
    "endTime": 1291335300,
    "abstract": "The internet has fundamentally changed the software development profession, but development tools and processes have struggled to keep pace. Learn how the internet and internet technologies like REST, linked data and RDF can be used to develop a breed of software development tools that are better adapted to development in the internet age and can solve a set of perennial problems that have limited the effectiveness of end-to-end development tool suites.",
    "speakers": [{
      "name": "Martin Nally",
      "jobTitle": "IBM Fellow",
      "company": "IBM Rational",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/YOW_2010/Speakers/Martin%20Nally_thumbnail.jpg",
      "bio": "Martin Nally is the Chief Technology Officer for the Rational Software division of IBM and an IBM Fellow. Martin joined IBM in 1990 with 10 years prior industry experience. He has held several architecture and development positions in IBM including lead architect and developer for IBM VisualAge/Smalltalk and VisualAge/Java. Martin was one of a team of three that launched the IBM project that later became the Eclipse framework and he led the architecture, design and development of WebSphere Studio, IBM's flagship Eclipse-based developer tool-suite that later evolved into Rational Application Developer. He was chief architect for Rational before becoming CTO."
    }]
  }, {
    "title": "Lessons Learned in Large HTTP-Centric Systems",
    "stream": "Web 2.0 Architecture",
    "startTime": 1291335600,
    "endTime": 1291339200,
    "abstract": "This session explores using commodity HTTP middleware in building REST-ish systems at large scale using agile and devops-friendly techniques. Attendees will learn the architectural and cost fallacies of traditional middleware and see how F/OSS solutions can be used to delivery massive scalable solutions. The talk will cover two case studies building real systems in production and compare them with the cost/benefits of using vendor-proprietary middleware, which sadly makes the vendors look like an expensive and risky option!",
    "speakers": [{
      "name": "Jim Webber",
      "jobTitle": "Global Head of Architecture",
      "company": "ThoughtWorks",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/YOW_2010/Speakers/jim%20webber_thumbnail.jpg",
      "bio": "Dr. Jim Webber is the Global Head of Architecture for ThoughtWorks where he works with clients on delivering dependable service-oriented systems. Jim was formerly a senior researcher with the UK E-Science programme where he developed strategies for aligning Grid computing with Web Services practices and architectural patterns for dependable Service-Oriented computing. Jim has extensive Web Services architecture and development experience as an architect with Arjuna Technologies and was the lead developer with Hewlett-Packard on the industry's first Web Services Transaction solution.\nJim is an active speaker in the Web Services space and is co-author of the book \"Developing Enterprise Web Services - An Architect's Guide\" in addition to being a contributing author to other books and articles.\nJim holds a B.Sc. in Computing Science and Ph.D. in Parallel Computing both from the University of Newcastle upon Tyne."
    }]
  }, {
    "title": "iPhone & Android: From Concept to Delivery",
    "stream": "Mobile",
    "startTime": 1291335600,
    "endTime": 1291339200,
    "abstract": "You will learn what it takes to take an idea and turn it into a shipping iPhone or Android app. Gain insight into our experiences with the Android/iPhone development cycle, including:\n• Working with designers\n• Integrating designs\n• Testing on multiple devices & firmwares\n• Beta testing\n• App Store & Marketplace submission\n• Updating your application\n• Tracking sales & usage",
    "speakers": [{
      "name": "Nathan de Vries",
      "jobTitle": "Freelance iOS Developer",
      "company": null,
      "websiteUri": "http://nathandevries.com/",
      "twitterHandle": "atnan",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/YOW_2010/Speakers/nathan%20devries_thumbnail.jpg",
      "bio": "Much like the idea that the best camera is the one that's with you, Nathan believes that the most exciting tech. is in and around thedevices we carry with us every day.\nFor this reason, Nathan has chosen the path of a freelance iOS developer, working with organisations who are trying to wrap their heads around the staggering trend towards mobile. He cut his teeth on WAP, J2ME & Symbian, but dropped everything in mid-2008 when Apple released the iPhone SDK. He never looked back.\nNathan maintains his sanity & creative energy by working with other highly motivated people in a fantastic co-working space in Surry Hills, Sydney."
    }, {
      "name": "Daniel Bradby",
      "jobTitle": "Director of Methods and Collaboration",
      "company": "jTribe Mobile Services",
      "websiteUri": "http://www.jtribe.com.au/",
      "twitterHandle": "dbradby",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/YOW_2010/Speakers/daniel%20bradby%20thumbnail.png",
      "bio": "With a long list of references from Australia and around the world under his belt, Daniel has worked across industries and government organisations while also being involved in popular OpenSource projects such as Hibernate and Subclipse. Daniel carries a wealth of consulting and software development experience and has proven both technical expertise and leadership skill in numerous high-profile projects in Australia and the US.\nDaniel's work at jTribe focuses on the Android and iOS mobile platforms and delivering successful projects for his clients on those platforms."
    }]
  }, {
    "title": "Monster Builds (and how to tame them)",
    "stream": "Tools",
    "startTime": 1291335600,
    "endTime": 1291339200,
    "abstract": "Continuous Integration is great but what happens when your builds get out of control? What happens when you have too many build plans, that take way too long to execute? How do you keep a handle on growing complexity and how do you measure and control build reliability? How do you stop builds growing into a rampaging monster and running amok destroying the city with its death rays and bullet-proof teeth?\nAs the number of features, tests, supported platforms and the number of developers and customers grows, there comes a time when you need serious engineering in your build if you want any hope of staying Agile.\nIn this presenation you will learn how to tame the monsters hiding in your builds, hopefully before they get out of control.",
    "speakers": [{
      "name": "Chris Mountford",
      "jobTitle": "Senior Software Engineer",
      "company": "Atlassian",
      "websiteUri": "http://www.blogger.com/profile/03560327085364406517",
      "twitterHandle": "chromosundrift",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/YOW_2010/Speakers/chrismountford_thumbnail.jpg",
      "bio": "Chris started programming when he was 8 years old on a Vic-20, tediously typing in games in BASIC and wishing for a cassette drive. Since then he has worked on a range of development projects from startups to multinationals, from finance to education and currently works on JIRA at Atlassian in Sydney. Chris has spoken at a number of user groups and conferences including SyXPAC and the Sydney Scrum User group, Illawarra Java User Group, Web Directions and Atlassian Summit."
    }]
  }, {
    "title": "Lunch",
    "startTime": 1291339200,
    "endTime": 1291341600
  }, {
    "title": "The Emergence of UX in an Agile World",
    "stream": "Interaction & Visualization",
    "startTime": 1291341600,
    "endTime": 1291345200,
    "abstract": "As a provider of hearing solutions to hearing impaired people for almost 30 years, Cochlear is renowned worldwide as a technical innovator and as a great Australian success story. We share the story of our journey with Agile software development in an environment that is traditionally not comfortable with it. More compellingly we cover the emergence of user experience and user centered design and how it has integrated into almost every aspect of the product development and delivery cycle.",
    "speakers": [{
      "name": "Victor Rodrigues",
      "jobTitle": "Head of Audiological Software Development",
      "company": "Cochlear",
      "websiteUri": "http://beyondcomprehension.posterous.com/",
      "twitterHandle": "jeunj",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/YOW_2010/Speakers/Victor%20Rodrigues_thumbnail.png",
      "bio": "Head of Audiological Software Development for Cochlear, whom he has been with for 10 years. Victor Rodrigues has over 18 years' experience in the IT sector. Previously working in fields as diverse as manufacturing control systems, service station and postal management systems and medical devices, Victor introduced Scrum to the Cochlear software team four years ago, with positive results. Since then engineering teams throughout the organisation are using Agile practices and methods.\nOne of the keys to the success of the software his teams deliver are Agile practices and methods. Utilising the closer relationships with stakeholders that form using this process, the teams have been able to provide stakeholders the opportunity to shape the product during its development. This is complemented by the team's use and Victor's passion for user-centred interaction design.\nHe recently was invited to join a working group (commissioned by the Association for the Advancement of Medical Instrumentation (AAMI)) responsible for producing a technical information report on the use of Agile methods and practices in the medical device industry."
    }, {
      "name": "Xerxes Battiwalla",
      "jobTitle": "Senior Developer",
      "company": "Cochlear",
      "websiteUri": "http://www.xerxesb.com/",
      "twitterHandle": "xerxesb",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/YOW_2010/Speakers/Xerxes%20Battiwalla_thumbnail.png",
      "bio": "Since joining Cochlear in 2008, Xerxes has been involved in a number of software projects. With a focus on improving their audiological software, he is working to streamline software systems that aid in the fitting of Cochlear Implant recipients, restoring hearing to the deaf faster and with better overall outcomes.\nHaving been involved in commercial software development for nearly a decade, Xerxes has worked with a broad range of clients from freight forwarding giants such as TNT and FedEx to New Zealand Parliament and HSBC bank. Commencing his career developing a tolling violation system for Sydney's south-west motorway, the M5, his interests then broadened to the digital media space, joining OneDigital (now Isobar Digital Agency Network). During this time he was an integral part of the team that created the Pizza Hut corporate website and online ordering facility, and designed and implemented the Federal Government's Tourism Australia portal, part of a cross media campaign to attract overseas visitors.\nDrawing on this range of experience in the web, desktop and mobile technology areas, his goal is to simplify processes and produce more intuitive software.\nOutside the 9-5, Xerxes teaches the next generation of programmers, Computer Science students at the University Of Technology Sydney, helping to bridge the gap between academia and industry professionals."
    }]
  }, {
    "title": "Emergent Design",
    "stream": "Best Practices",
    "startTime": 1291341600,
    "endTime": 1291345200,
    "abstract": "This session describes the current thinking about emergent design, discovering design in code. The hazard of Big Design Up Front in software is that you don't yet know what you don't know, and design decisions made too early are just speculations without facts. Emergent design techniques allow you to wait until the last responsible moment to make design decisions. This talk covers four areas: emergent design enablers, battling things that make emergent design hard, finding idiomatic patterns, and how to leverage the patterns you find. It includes both proactive (test-driven development) and reactive (refactoring, metrics, visualizations, tests) approaches to discovering design, and discusses the use of custom attributes, DSLs, and other techniques for utilizing them. The goal of this talk is to provide nomenclature, strategies, and techniques for allowing design to emerge from projects as they proceed, keeping your code in sync with the problem domain.",
    "speakers": [{
      "name": "Neal Ford",
      "jobTitle": "Software Architect and Meme Wrangler",
      "company": "Thoughtworks",
      "websiteUri": "http://www.nealford.com",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/photos/speakers/neal_ford_thumbnail.png",
      "twitterHandle": "neal4d",
      "bio": "Neal is Software Architect and Meme Wrangler at ThoughtWorks, a global IT consultancy with an exclusive focus on end-to-end software development and delivery. Before joining ThoughtWorks, Neal was the Chief Technology Officer at The DSW Group, Ltd., a nationally recognized training and development firm. Neal has a degree in Computer Science from Georgia State University specializing in languages and compilers and a minor in mathematics specializing in statistical analysis. He is also the designer and developer of applications, instructional materials, magazine articles, video presentations, and author of 6 books, including the most recent The Productive Programmer.\nHis language proficiencies include Java, C#/.NET, Ruby, Groovy, functional languages, Scheme, Object Pascal, C++, and C. His primary consulting focus is the design and construction of large-scale enterprise applications. Neal has taught on-site classes nationally and internationally to all phases of the military and to many Fortune 500 companies. He is also an internationally acclaimed speaker, having spoken at over 100 developer conferences worldwide, delivering more than 600 talks. If you have an insatiable curiosity about Neal, visit his web site at www.nealford.com. He welcomes feedback and can be reached at nford@thoughtworks.com."
    }]
  }, {
    "title": "When the Fur Flies: Dev and Ops Cooperation when the Worst Happens",
    "stream": "Development & Operations",
    "startTime": 1291341600,
    "endTime": 1291345200,
    "abstract": "There's nothing like a crisis to remove artificial barriers. In thissession, Michael will present an experience report about development and operations coming together after a failed launch. Aside from the funof sharing war stories and comparing scars, what can we learn about climbing out of a crater after the worst has already happened? Can we capture the special magic of a firefighting mission during more sedate times? Beyond all of that, come find out how to stay out of the crater to begin with.",
    "speakers": [{
      "name": "Michael T. Nygard",
      "websiteUri": "http://www.michaelnygard.com",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/photos/speakers/Michael_Nygaard_thumbnail.png",
      "bio": "Michael strives to raise the bar and ease the pain for developers across the country. He shares his passion and energy for improvement with everyone he meets, sometimes even with their permission. Michael has spent the better part of 20 years learning what it means to be a professional programmer who cares about art, quality, and craft. He's always ready to spend time with other developers who are fully engaged and devoted to their work--the \"wide awake\" developers. On the flip side, he cannot abide apathy or wasted potential.\nMichael has been a professional programmer and architect for nearly 20 years. During that time, he has delivered running systems to the U. S. Government, the military, banking, finance, agriculture, and retail industries. More often than not, Michael has lived with the systems he built. This experience with the real world of operations changed his views about software architecture and development forever.\nHe worked through the birth and infancy of a Tier 1 retail site and has often served as \"roving troubleshooter\" for other online businesses. These experiences give him a unique perspective on building software for high performance and high reliability in the face of an actively hostile environment.\nMost recently, Michael wrote \"Release It! Design and Deploy Production-Ready Software\", a book that realizes many of his thoughts about building software that does more than just pass QA, it survives the real world. Michael previously wrote numerous articles and editorials, spoke at Comdex, and co-authored one of the early Java books."
    }]
  }, {
    "title": "Creating Interactive Data Visualizations for the Web with the JavaScript InfoVis Toolkit 2.0",
    "stream": "Interaction & Visualization",
    "startTime": 1291345500,
    "endTime": 1291349100,
    "abstract": "The Web has never been more open to everyone. Open Data services exist in almost every web application: from social networking apps to governmental pages and the news, all this data can be instantly accessed by exposed APIs. However, although most of this data is offered in a simple interchange format, its structures are quite complex, ranging from complex networks to time-based information, hierarchical data or heavy graphs. Displaying this data in a manner that enables the viewer to gain some insight can be challenging, especially if we aim at providing some interaction and doing it in a cross-browser/cross-device manner. The JavaScript InfoVis Toolkit creates interactive data visualizations for the Web. It's based solely on Web Standards, leveraging the power of native browser technologies to provide insights on complex data. In this talk you will learn about the JavaScript InfoVis Toolkit and how it can help you create advanced data visualizations for the Web.",
    "speakers": [{
      "name": "Nicolas Garcia Belmonte",
      "websiteUri": "http://blog.thejit.org",
      "twitterHandle": "philogb",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/YOW_2010/Speakers/nicolasgarciasbelmonte_thumbnail.jpg",
      "bio": "Nicolas Garcia Belmonte is a Computer Science Engineer from the Buenos Aires Institute of Technology (ITBA), in Argentina. His main interests are Web Standards and Information Visualization. Nicolas is the creator of the JavaScript InfoVis Toolkit, a toolkit to create Interactive Data Visualizations for the Web and V8-GL, a hardware accelerated graphics library built on top of Google's V8 JavaScript Engine."
    }]
  }, {
    "title": "Management 2.0: Leadership Models for an Information Age",
    "stream": "Lean Software Management",
    "startTime": 1291345500,
    "endTime": 1291349100,
    "abstract": "Henry Ford changed the world through the manufacturing machinery he created over 100 years ago. Separating 'thinking' from 'doing', Mr Ford defined a management archetype for large western organisations that still persists over a century later. But as we move to an information age at break-neck speed, does command & control management still look as compelling?\nIn this presentation, Richard will discuss the history of management science and how management techniques affect the performance of technology teams and IT divisions. He will demonstrate the fundamental differences between today's two prevalent management theories: Scientific Management Theory and Systems Management Theory. He will explore the foundations of management theory in philosophical thought, the development of management models through political and military leadership, and ultimately the application of management concepts in today's information age. Richard will investigate a number of case studies from IT and beyond, presenting empirical evidence that demonstrates a change in management philosophy can directly affect business results. This presentation is a must for anyone interested in or involved in enterprise level Agile adoption or simply with an interest in hearing more on 'Lean & Systems Thinking' from an experienced practitioner.",
    "speakers": [{
      "name": "Richard Durnall",
      "jobTitle": "Head of Delivery",
      "company": "Realestate.com.au (REA)",
      "websiteUri": "http://www.richarddurnall.com",
      "twitterHandle": "rdurnall",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/photos/speakers/Richard%20Durnall_thumbnail.jpg",
      "bio": "Richard Durnall is a Head of Delivery for REA Group based in Melbourne, Australia. The REA Group is entrenched as Australia's most popular commerical and residential real estate websites. Prior to joining REA, Richard was a Principal Consultant for ThoughtWorks based in Melbourne Australia, with over 13 years experience in the high-technology industry. Richard helps ThoughtWork's clients to improve the efficiency and effectiveness of their IT divisions by applying Lean and Agile techniques to their businesses.\nRichard spent a number of years working in the Manufacturing & Supply Chain Systems Division of Ford Motor Company, working with a global team to introduce Lean principles to the manufacturing plants and re-align the IT systems to the new processes. Richard was lucky enough to work with a number of Lean experts, some ex-Toyota, and has been applying this knowledge in the IT domain for the last 5 years.\nRichard is a frequent author on applying Lean management thinking to IT divisions at his site (www.richarddurnall.com) and presents frequently on the applications of Lean in IT.\nRichard has spent a number of years working with Agile software development teams and uses his Lean knowledge to resolve the larger organisational issues often experienced by large organisations moving to new working practices.\nRichard's clients include some of Australia's largest businesses in the financial services, government, print, on-line and service sectors.\nRichard is a certified 6-Sigma practitioner and a chartered member of the British Computer Society."
    }]
  }, {
    "title": "LMAX: How to do over 100K contended complex business transactions per second at less than 1ms latency",
    "stream": "Scaling",
    "startTime": 1291345500,
    "endTime": 1291349100,
    "abstract": "Conventional wisdom says that memory is fast, disk is slow, networks are slower and that fast systems must be highly concurrent to achieve maximum performance. Much of this is outdated and some of it is now wrong. Modern hardware is phenomenally fast, but we have become complacent and use it in extremely inefficient and inappropriate ways.\nFor world class performance on commodity hardware you need to take a holistic approach to software design. The good news is that all the stuff we learned in computer science 101 is what really matters, choose your data structures carefully, model your domain, understand your platform, work hard to have a clear separation of concerns, but as well as all of that, run your business logic on a single thread!?",
    "speakers": [{
      "name": "Dave Farley",
      "jobTitle": "Head of Software Development",
      "company": "LMAX",
      "websiteUri": "http://www.lmax.com/",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/YOW_2010/Speakers/Dave%20Farley_thumbnail.jpg",
      "bio": "Dave Farley has been having fun with computers for nearly 30 years. Over that period he has worked on most types of software, from firmware, through tinkering with operating systems and device drivers, to writing games, and commercial applications of all shapes and sizes. He started working in large scale distributed systems about 20 years ago, doing research into the development of loose-coupled, message-based systems - a forerunner of SOA. He has a wide range of experience leading the development of complex software in teams, both large and small, in the UK and USA. Dave was an early adopter of agile development techniques, employing iterative development, continuous integration and significant levels of automated testing on commercial projects from the early 1990s. He honed his approach to agile development in his four and a half year stint at ThoughtWorks where he was a technical principal working on some of their biggest and most challenging projects. Dave is currently working for the London Multi-Asset Exchange (LMAX), an organization that is building one of the highest performance financial exchanges in the world."
    }]
  }, {
    "title": "Afternoon Tea",
    "startTime": 1291349100,
    "endTime": 1291350000
  }, {
    "title": "Computational Information Design",
    "stream": "Interaction & Visualization",
    "startTime": 1291350000,
    "endTime": 1291353600,
    "abstract": "The ability to collect and store data continues to increase, but our ability to understand it remains unchanged. Data visualization makes use of our evolutionary proclivity for decoding visual images and employs this ability as a high-bandwidth means of getting data into our heads. In this talk, I'll present work I've developed ranging from illustrations of data for magazines and journals to software tools used by geneticists to interactive applications for Fortune 10 companies.",
    "speakers": [{
      "name": "Ben Fry",
      "jobTitle": "Principal",
      "company": "Fathom",
      "websiteUri": "http://benfry.com/",
      "twitterHandle": "ben_fry",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/YOW_2010/Speakers/benfry_thumbnail.jpg",
      "bio": "Ben Fry received his doctoral degree from the Aesthetics + Computation Group at the MIT Media Laboratory, where his research focused on combining fields such as computer science, statistics, graphic design, and data visualization as a means for understanding information. After completing his thesis, he spent time developing tools for visualization of genetic data as a postdoc with Eric Lander at the Eli & Edythe L. Broad Insitute of MIT Harvard. During the 2006-2007 school year, Ben was the Nierenberg Chair of Design for the Carnegie Mellon School of Design. At the end of 2007, he finished writing Visualizing Data for O'Reilly.\nWith Casey Reas of UCLA, he currently develops Processing, an open source programming environment for teaching computational design and sketching interactive media software that won a Golden Nica from the Prix Ars Electronica in 2005. The project also received the 2005 Interactive Design prize from the Tokyo Type Director's Club. In 2006, Fry received a New Media Fellowship from the Rockefeller Foundation to support the project. Processing was also featured in the 2006 Cooper-Hewitt Design Triennial. In 2007, Reas and Fry published Processing: A Programming Handbook for Visual Designers and Artists with MIT Press. Processing 1.0 was released in November 2008, and is used by tens of thousands of people every week.\nFry's personal work has shown at the Whitney Biennial in 2002 and the Cooper Hewitt Design Triennial in 2003. Other pieces have appeared in the Museum of Modern Art in New York, at Ars Electronica in Linz, Austria and in the films Minority Report and The Hulk. His information graphics have also illustrated articles for the journal Nature, New York Magazine, The New York Times, Seed, and Communications of the ACM.\nBen Fry runs a design and software consultancy based in Cambridge, Massachusetts."
    }]
  }, {
    "title": "Row Together, Row in the Right Direction, Row Faster: Improving alignment and throughput in software development",
    "stream": "Lean Software Management",
    "startTime": 1291350000,
    "endTime": 1291353600,
    "abstract": "How much does it matter that we're good at delivering if it turns out we're working on the wrong things?  Let's explore a way to think not just about individual projects, but rather the project delivery system (i.e., how projects are delivered in general).  You will learn concepts and simple techniques for aligning a work portfolio to a common strategy, determining a strategy if it doesn't exist, and linking all of this to efforts to improve throughput.",
    "speakers": [{
      "name": "Jason Yip",
      "jobTitle": "Principal Consultant",
      "company": "ThoughtWorks",
      "websiteUri": "http://jchyip.blogspot.com/",
      "twitterHandle": "jchyip",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/YOW_2010/Speakers/Jason%20Yip_thumbnail.png",
      "bio": "Jason is a popular speaker and a respected community builder. He has devoted much of his time to supporting users groups including, Sydney Limited WIP Society, SyXPAC, and Girl Geek Dinners. Jason has worked at ThoughtWorks for the past 9 years as a buildmaster, developer and Agile / Lean coach. He was one of the early committers on CruiseControl, the first Open Source Continuous Integration server, and is a prolific blogger and tweeter on Agile and Lean topics. Jason used to own the entire first results page on Google until some Hong Kong actor showed up."
    }]
  }, {
    "title": "Scaling Applications: Complexity, Performance, Maintainability, Multi Tenancy",
    "stream": "Scaling",
    "startTime": 1291350000,
    "endTime": 1291353600,
    "abstract": "We are building the same types of systems as we built yesterday, the demands placed on our systems becomes more and more demanding. We need to handle more users, offer more intelligent behavior, provide different behavior for differenet clients, parallelize both development and deployment, handle partial failures in our applications, offer the operations team rich insight into our systems and the ability to tweak them at runtime and so much more.\nTrying to build such application using the standard N-tiered architecture has proven to be hard, challenging and complex. In this session, you will learn how changing some of the underlying architectural concepts in how we build applications can lead to simpler solutions that scale extremely well. Those concepts include divide and conquer, background evaluation, one way messaging and ruthless application of the single responsibility principle. We will cover the full gamot, from building dynamic data models to customizing behaviors and adaptable user interface.",
    "speakers": [{
      "name": "Oren Eini",
      "jobTitle": "Software Wizard",
      "company": "Hibernating Rhinos",
      "websiteUri": "http://ayende.com",
      "twitterHandle": "ayende",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/photos/speakers/Oren%20Eini_thumbnail.jpg",
      "bio": "Oren Eini is working for Hibernating Rhinos LTD, a Israeli based company producing developer productivity tools for OLTP applications such as NHibernate Profiler (nhprof.com), Linq to SQL Profiler(l2sprof.com), Entity Framework Profiler (efprof.com) and more.\nOren's main focus is on architecture and best practices that promote quality software and zero-friction development. Oren is the author of Rhino Mocks, one of the most popular mocking frameworks on the .NET platform, and is also a leading figure in other well known open source projects including the Castle project and NHibernate.\nAn internationally known presenter, Oren has spoken at conferences such as DevTeach, JAOO, QCon, Oredev, NDC and Progressive.NET and is the author of the book \"DSLs in Boo: Domain Specific Languages in .NET\", published by Manning. Oren, using his pseudonym as Ayende Rahien, is a frequent blogger at http://www.ayende.com/Blog/.\nHis hobbies include reading fantasy novels, reviewing code, and writing about himself in the third person. Oren is also a Microsoft MVP, a fact that he tends to forget when writing a bio."
    }]
  }, {
    "title": "Forty Years of Fun with Computers",
    "stream": "Interaction & Visualization",
    "startTime": 1291353900,
    "endTime": 1291357500,
    "abstract": "Dan Ingalls has had the good fortune to create, or at least to assist at the birth of, a number of core technologies that we take for granted these days. In this talk he will present these from several perspectives: the forces that brought them forth, the qualities that give them power, and the liveliness that makes them all fun to this day.",
    "speakers": [{
      "name": "Dan Ingalls",
      "jobTitle": "Principal Architect",
      "company": "Five Generations of Smalltalk",
      "websiteUri": "http://whatsup-di.blogspot.com/",
      "twitterHandle": "DanIngalls",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/photos/speakers/Dan%20Ingalls_thumbnail.jpg",
      "bio": "Dan Ingalls is the principal architect of five generations of Smalltalk environments. He designed the byte-coded virtual machine that made Smalltalk practical in 1976. He later conceived a Smalltalk written in itself and made portable and efficient by a Smalltalk-to-C translator, now known as the Squeak open-source Smalltalk. Dan also invented BitBlt, the general-purpose graphical operation that underlies most bitmap graphics systems today, as well as pop-up menus. His most recent work, the Lively Kernel, is a dynamic graphics and programming environment that runs entirely in a browser. Able to save its results and even new versions of itself as web pages, if offers the promise that wherever there is the web there is authoring. Dan received his B.A. in Physics from Harvard University, and his M.S. in Electrical Engineering from Stanford University. He is a recipient of the ACM Grace Hopper Award, and the ACM Software Systems Award.\nDan has recently joined SAP and is a member of the Chief Scientist team guiding the company’s technology vision, direction and execution."
    }]
  }, {
    "title": "What is This Thing Called \"Pull\"?",
    "stream": "Lean Software Management",
    "startTime": 1291353900,
    "endTime": 1291357500,
    "abstract": "Pull means a lot of things to a lot of people:\n• Pull = Pursuing Passion\n• Pull = Putting Customers First\n• Pull = Producing Based on Demand\nThese definitions of pull have something in common; they all contain a strong element of observation, orientation, decision, and action – the OODA loop. As the pace of business increases and unexpected events become common, pull becomes like an increasingly attractive alternative to push.\nThe problem is, pull doesn't work without preparation. Pull requires an environment that sends the correct signals, methods to rapidly detect the right patterns, and people who have the skills and training to make the right decisions. So the real challenge of pull is creating the environment, devising the patterns, and developing the people that ensure the right decisions are made and rapidly carried out, no matter what situation presents itself.",
    "speakers": [{
      "name": "Mary Poppendieck",
      "jobTitle": "Thought leader & respected author",
      "websiteUri": "http://www.poppendieck.com",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/photos/speakers/Mary-Poppendieck_SH_thumbnail.jpg",
      "bio": "Mary Poppendieck has been in the Information Technology industry for over thirty years. She has managed software development, supply chain management, manufacturing operations, and new product development. She spearheaded the implementation of a Just-in-Time system in a 3M video tape manufacturing plant and led new product development teams, commercializing products ranging from digital controllers to 3M Light Fiber™.  Mary is a popular writer and speaker, and coauthor of the book Lean Software Development, which was awarded the Software Development Productivity Award in 2004. A sequel, Implementing Lean Software Development, was published in 2006. A third book, Leading Lean Software Development, was published in November 2009."
    }]
  }, {
    "title": "Performance and Scalability Revisited: In-Memory Data Grids",
    "stream": "Scaling",
    "startTime": 1291353900,
    "endTime": 1291357500,
    "abstract": "Building scalable, highly-available applications that perform well is not an easy task. These features cannot be simply “bolted” onto an existing application – they have to be architected into it. Unfortunately, the things we need to do to achieve them are often in conflict with each other, and finding the right balance is crucial.\nIn this session we will discuss why scaling web applications is difficult and will look at some of solutions we have come up with in the past to deal with the issues involved. We will then look at how in-memory data grids can make our jobs easier by providing a solid architectural foundation to build our applications on top of.\nIf you are new to in-memory data grids, you are guaranteed to leave the presentation eager to learn more. However, even if you are already using one you will likely walk out with a few ideas on how to improve performance and scalability of your applications.",
    "speakers": [{
      "name": "Brian Oliver",
      "jobTitle": "Global Solutions Architect",
      "company": "Oracle Coherence Engineering",
      "websiteUri": "http://brianoliver.wordpress.com/",
      "photoUri": "http://jaoo.dk/aarhus-2008/file?path=/photos/speakers/brian_oliver_thumbnail.png",
      "bio": "Brian Oliver is a Global Solutions Architect at Oracle. He works within the Oracle Coherence Engineering group and predominantly focuses on enabling financial institutions across Europe and North America to implement massively scalable and high-performance Data Grid solutions.\nOver the past 10 years he has been leading the development of large-scale multi-language and multi-currency Web, E-Commerce, Sports Gaming and Financial systems making extensive use of Java technologies. He's the founder of the Coherence SIG, probably the only regularly meeting Data Grid Special Interest Group in the world, and the Coherence Incubator, a site dedicated to providing reference implementations of architectural patterns on top of Oracle Coherence.\nHe's been using Java since 1996. He opens an IDE every couple of days to cook up new solutions. On alternate days he's in the air traveling around Europe and North America talking about Data Grids."
    }]
  }, {
    "title": "Farewell Drinks",
    "startTime": 1291357800,
    "endTime": 1291370400
  }]
}